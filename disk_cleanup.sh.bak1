FILESYSTEM=/dev/sda1 # or whatever filesystem to monitor
CAPACITY=80 # start cleaning up if FS is over 80% of usage 
#DATADIR=/data/guacamole/ # the given folder
DATADIR=/home/ubuntu/doudoudou/ceshi/
SIZE=100 # size (in GB) threshold to reach for the given folder before starting to delete files
DAYSOLD=30 # delete files created number of days ago
FLAG=1
checkInt(){ 
			if [ $OPTARG -eq 0 ];then
				FLAG=0
			else
			#expr $OPTARG + 0  &>/dev/null
				expr $OPTARG + 0 >/dev/null 2>&1
				[ $? -ne 0 ] && { echo "Args must be integer!";exit 1; } 
			fi
}
checkint(){

#	echo	$OPTARG|awk 'if(/^[0-9]*$/){print "a is an integer"}' 
# echo $OPTARG|awk '{if ($1~/^[0-9]*$/) print "a is an integer";else { print "a is not"; flag=1; }  } END{if(flag==1) exit }'		
#	[ $OPTARG -ge 0 ] 2>/dev/null && echo "A is an integer"
	if [[ "$OPTARG" =~ ^[0-9]+$ ]] ; then
		  echo "是整数"
	else
		  echo "不是整数"
		  exit 1
	fi
}

validint(){

#	echo	$OPTARG|awk 'if(/^[0-9]*$/){print "a is an integer"}' 
# echo $OPTARG|awk '{if ($1~/^[0-9]*$/) print "a is an integer";else { print "a is not"; flag=1; }  } END{if(flag==1) exit }'		
#	[ $OPTARG -ge 0 ] 2>/dev/null && echo "A is an integer"
	if [[ "$1" =~ ^[0-9]+$ ]] ; then
		  echo "是整数"
	else
		  echo "不是整数"
		  exit 1
	fi
}

checkfloat(){
	 fvalue="$OPTARG"
		  
		  if [ ! -z $(echo $fvalue | sed 's/[^.]//g') ] ; then
			   
			    decimalPart="$(echo $fvalue | cut -d. -f1)"
					  fractionalPart="$(echo $fvalue | cut -d. -f2)"
					   
					    if [ ! -z $decimalPart ] ; then
							   if ! validint "$decimalPart" "" "" ; then
								       return 1
										      fi
											    fi
												 
												  if [ "${fractionalPart%${fractionalPart#?}}" = "-" ] ; then
													     echo "Invalid floating-point number: '-' not allowed \
															     after decimal point" >&2
																    return 1
																	  fi
																	    if [ "$fractionalPart" != "" ] ; then
																			   if ! validint "$fractionalPart" "0" "" ; then
																				       return 1
																						      fi
																							    fi
																								 
																								  if [ "$decimalPart" = "-" -o -z "$decimalPart" ] ; then
																									     if [ -z $fractionalPart ] ; then
																											     echo "Invalid floating-point format." >&2 ; return 1
																													    fi
																														  fi
																														   
																														   else
																															     if [ "$fvalue" = "-" ] ; then
																																	    echo "Invalid floating-point format." >&2 ; return 1
																																			  fi
				if ! validint "$fvalue" "" "" ; then
					return 1
				fi
				fi
				return 0
}


while getopts p:d:c:s: opt
do
	case ${opt} in
		p)
		if [ -d "$OPTARG" ]; then  
			DATADIR=$OPTARG
			echo "datadir is $DATADIR"
		else
			FLAG=0
			echo "this path is not a correct path"
		fi
		;;
		d)
		checkint $OPTARG
		if [ "$OPTARG" -gt 0 ]; then
			DAYSOLD=$OPTARG
			echo "daysold is $DAYSOLD"
		else
			FLAG=0
			echo "error input"
		fi
		;;
		c)
		checkint $OPTARG
		if [ "$OPTARG" -gt 0 ]&&[ "$OPTARG" -lt 100 ]; then
			CAPACITY=$OPTARG
			echo "capacity is $CAPACITY"
		else
			FLAG=0
			echo "error input"
		fi
		;;
		s)
		checkfloat $OPTARG
		if [ "$OPTARG" -gt 0 ]; then
			SIZE=${OPTARG}
			echo "size is $SIZE"
		else
			FLAG=0
			echo "error input"
		echo 
		fi
		;;
		*)
		FLAG=0
		echo "USAGE [-p]:Set the path  [-d]: Set the number of days before [-c]:Set the capacity [-s]:Set the size"
		;;
	esac
done

# first delete files older than 30 days in DATADIR
if [ $FLAG -eq 0 ]; then
	echo "please enter the correct value"
else
	find $DATADIR -type f -mtime -$DAYSOLD -print
#	find $DATADIR -type f -mtime +$DAYSOLD -exec rm {} \;
fi

# using [ instead of [[ for better error handling.
if [ $(df -P $FILESYSTEM | awk '{ gsub("%",""); capacity = $5 }; END { print capacity }') -gt $CAPACITY ]
then
	# ls -lc delete the oldest files if total file size in this folder is greater than $SIZE G
	cd $DATADIR && ls -lc | awk '{ if (!system("test -f " $9)) { size += $5; if (size > "$SIZE"*2^30 ) system("rm " $9) } }'
fi

